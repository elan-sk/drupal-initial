{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}

{% set class_block = 'article' %}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    class_block,
  ]
%}
{{ attach_library('bootstrap5/node') }}
<article{{ attributes.addClass(classes) }}>
  <div{{ content_attributes.addClass('node__content') }}>
    <div class="container">
      <div class="row">
        <div class="col-12 {{class_block}}__header mb-4 fade-in">
          {{ title_prefix }}
          {% if label and page %}
            <h2 class="col-lg-8 {{class_block}}__title h1">
              {{ label }}
            </h2>
          {% endif %}
          {{ title_suffix }}
        </div>
        <div class="col-lg-8 {{class_block}}__content mb-5 pe-lg-5">
          <div class="{{class_block}}__content-image fade-in">
            {% set image_url = file_url(content.field_featured_image[0]['#media'].field_media_image.entity.uri.value) %}
            {% set image_alt = content.field_featured_image[0]['#media'].field_media_image.alt %}
            {% if image_url %}
            <figure class="{{class_block}}__image corner-m">
              <img src="{{ image_url }}" alt="{{ image_alt }}" class="{{class_block}}__image-source">
            </figure>
            {% endif %}
          </div>
          <div class="{{class_block}}__metadata fade-in">
            <div class="{{class_block}}__metadata-item d-flex justify-content-between mb-3">
              <span class="{{class_block}}__metadata-value">
                {{ node.getCreatedTime|date('F j, Y') }}
              </span>
              <div class="{{class_block}}__metadata-type">
                {% set type_name = node.field_project_type.entity.name.value %}
                {% set type_id = node.field_project_type.entity.tid.value %}
                {%
                  set classes_type = [
                    'type',
                    'type-' ~ node.bundle|clean_class,
                    'type-' ~ node.bundle|clean_class ~ '--term-' ~ type_id,
                    class_block ~ '__type',
                  ]
                %}
                <span class="{{classes_type|join(' ')}}">
                  {{type_name}}
                </span>
              </div>
            </div>
            <div class="{{class_block}}__metadata-item">
              <span class="{{class_block}}__metadata-label co-green">{{'COMPARTIR'|t}}</span>
              <div class="{{class_block}}__social-sharing">
                {{ drupal_block("social_sharing_buttons_block") }}
              </div>
            </div>
          </div>
          <div class="{{class_block}}__text pe-lg-5">
            {{ content.body[0] }}
          </div>
        </div>
        <div class="col-lg-4 {{class_block}}__content-cards fade-in ps-lg-5 pb-5">
          <header class="{{class_block}}__header-cards mb-4">
            <h3 class="h4">Tambi√©n te puede interesar</h3>
          </header>
          {{drupal_view('related_project', 'teaser_project')}}
        </div>
      </div>
    </div>
  </div>
</article>
